#!/usr/bin/perl

use strict;
use warnings;

use JSON qw(encode_json);
use Mojo::DOM;

my $html = join('', <>);

my $dom = Mojo::DOM->new($html);

my %weather;

for my $td ($dom->find('td')->each) {
    if (($td->attr->{'data-test-label'}//'') =~ /^(\w+)-(\d{4}-\d{2}-\d{2})T(\d{2}:\d{2}):\d{2}Z$/) {
        my ($field, $date, $time) = ($1, $2, $3);
        my $dt = "$date $time";
        $weather{$dt}{$field}{text} = sanitise($td->all_text);

        my $data_value;
        for my $div ($td->find('div')->each) {
            $data_value = $div->attr->{'data-value'} if exists $div->attr->{'data-value'};
        }
        $weather{$dt}{$field}{data} = $data_value if defined $data_value;

        my $imgalt_value;
        for my $img ($td->find('img')->each) {
            $imgalt_value = $img->attr->{'alt'} if exists $img->attr->{'alt'};
        }
        $weather{$dt}{$field}{imgalt} = $imgalt_value if defined $imgalt_value;
    }
}

my @out;
for my $dt (sort keys %weather) {
    $weather{$dt}{dt} = $dt;
    push @out, $weather{$dt};
}
print encode_json(\@out);

sub sanitise {
    my ($str) = @_;
    $str =~ s/\s+/ /g;
    $str =~ s/^\s+//;
    $str =~ s/\s+$//;
    return $str;
}
